image:                                node:10

pipelines:
  default:
    - step:
        caches:
          - node
        name:                          "Build and Test"
        script:
          - echo "Build, Test and Upload"
          - apt-get update
          - apt-get install jq zip -y
          - npm install
          - npm run-script test:unit
          - npm run-script lint
  branches:
    master:
      - step:
          caches:
          - node
          name:                        "Build, Test and Upload"
          script:
            # PACKAGE INSTALLATIONS
            - echo "Build, Test and Upload"
            - apt-get update
            - apt-get install jq zip -y
            - npm install
            - npm run-script test:unit
            - npm run-script build
            - declare -x VERSION=$(jq -r '.version' package.json)
            - echo "$VERSION"
            - zip -r application.zip .
            - pipe:                    atlassian/aws-elasticbeanstalk-deploy:0.5.5
              variables:
                AWS_ACCESS_KEY_ID:     $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION:    $AWS_DEFAULT_REGION
                APPLICATION_NAME:      '$APPLICATION_NAME'
                COMMAND:               'upload-only'
                ZIP_FILE:              'application.zip'
                VERSION_LABEL:         '$APPLICATION_NAME-$VERSION-$BITBUCKET_BUILD_NUMBER'
      - step:
          name: "README to Confluence"
          script:
            - set -ex && apt-get update && apt-get install -y ca-certificates gcc musl-dev git mercurial zip curl
            - echo "Updating Readme.md to Confluence Documentation"
            - curl -LO https://github.com/justmiles/go-markdown2confluence/releases/download/v3.0.2/markdown2confluence_3.0.2_linux_x86_64.tar.gz
            - tar -xzvf markdown2confluence_3.0.2_linux_x86_64.tar.gz -C /usr/local/bin/ markdown2confluence
            - markdown2confluence -u $CONFLUENCE_USER -p $CONFLUENCE_PASSWORD -e $CONFLUENCE_ENDPOINT -s 'ARCH' --parent 'Repositories' -t 'liquidity-reserve-dashboard' -d README.md
      - step:
          name:                        "Deploy to Staging"
          deployment:                  staging
          script:
          - echo "$VERSION Deployment to Staging!"
          - apt-get update
          - apt-get install jq -y
          - declare -x VERSION=$(jq -r '.version' package.json)
          - pipe:                      atlassian/aws-elasticbeanstalk-deploy:0.5.5
            variables:
              AWS_ACCESS_KEY_ID:       $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY:   $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION:      $AWS_DEFAULT_REGION
              APPLICATION_NAME:        '$APPLICATION_NAME'
              COMMAND:                 'deploy-only'
              VERSION_LABEL:           '$APPLICATION_NAME-$VERSION-$BITBUCKET_BUILD_NUMBER'
              ENVIRONMENT_NAME:        '$APPLICATION_NAME-staging'
              WAIT:                    'true'
      - step:
          name:                        "Deploy to Production"
          deployment:                  production
          trigger:                     manual
          script:
            - echo "Deployment to Production!"
            - apt-get update
            - apt-get install jq -y
            - declare -x VERSION=$(jq -r '.version' package.json)
            - pipe:                    atlassian/aws-elasticbeanstalk-deploy:0.5.5
              variables:
                AWS_ACCESS_KEY_ID:     $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION:    $AWS_DEFAULT_REGION
                APPLICATION_NAME:      '$APPLICATION_NAME'
                COMMAND:               'deploy-only'
                VERSION_LABEL:         '$APPLICATION_NAME-$VERSION-$BITBUCKET_BUILD_NUMBER'
                ENVIRONMENT_NAME:      '$APPLICATION_NAME-production'
                WAIT:                  'true'
